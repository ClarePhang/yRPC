/* rpc.h
 * DO NOT EDIT THIS FILE.
 * Date  : 2017-11-22
 * Author: Konishi
 * Email : konishi5202@163.com
 */
#ifndef RPC_H__
#define RPC_H__
#include <string>
#include <pthread.h>

#include "message.h"
#include "int_hash.h"
#include "rpc_hash.h"
#include "rpc_comm.h"
#include "socketbase.h"
#include "threadpool.h"
#include "module_config.h"
#include "network_config.h"

using namespace std;

typedef void (*ServerFunction)(void *arg);

class HSAERPC
{
public:
    HSAERPC();
    ~HSAERPC();

public:
    int setProcessName(const char *process);
    int setConfigPath(const string &network, const string &module);
    int addService(const char *server, void (*func)(void *arg));
    int setResponseMsg(MessageStr &msg,void *response, size_t len);
    int proxyCall(const string &module, const string &func, void *send, size_t slen, void **recv, size_t &rlen);
    int start(void);
    int RunUntilAskedToQuit(void);

private:
    static unsigned int getFrameID(void);
    static int recvData(const void *data, size_t data_len);
    static int event_handler(unsigned int type, void *fd_ptr, void *data, size_t data_len);
    
private:
    string process;
    INTHash proxy_hash;
    RPCComm rpc_comm_base;
    SocketBaseOpt socket_base;
    ModuleConfig module_config;
    NetworkConfig network_config;
    
private:
    static RPCHash func_hash;
    static unsigned int frame_id;
    static ThreadPool rpc_threadpool;
};

#endif

