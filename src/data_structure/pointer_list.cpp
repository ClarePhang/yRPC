/* nil_pointer_list.cpp
 * DO NOT EDIT THIS FILE.
 * Date  : 2017-11-09
 * Author: Konishi
 * Email : konishi5202@163.com
 */
#include <stdio.h>

using namespace std;

#include "pointer_list.h"

#define K_DEBUG   printf
#define K_INFO    printf
#define K_WARN    printf
#define K_ERROR   printf

PointerList::PointerList()
{
    nilp_list.clear();
}

PointerList::~PointerList()
{
    nilp_list.clear();
}

int PointerList::size(void)
{
    return nilp_list.size();
}

void PointerList::clear(void)
{
    nilp_list.clear();
}

bool PointerList::empty(void)
{
    return nilp_list.empty();
}

void *PointerList::find(void *addr)
{
    for(it = nilp_list.begin(); it != nilp_list.end(); it++)
    {
        if(addr == *it)
            return *it;
    }

    return NULL;
}

int PointerList::insert(void *addr)
{
    nilp_list.push_back(addr);
//    nilp_list.push_front(addr);
//    nilp_list.insert(nilp_list.begin(), addr);
//    nilp_list.insert(nilp_list.end(), addr);
    return 0;
}

int PointerList::remove(void *addr)
{
    nilp_list.remove(addr);
    return 0;
}

