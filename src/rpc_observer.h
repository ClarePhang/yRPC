/* rpc_observer.h
 * DO NOT EDIT THIS FILE.
 * Date  : 2018-01-22
 * Author: Konishi
 * Email : konishi5202@163.com
 */
#ifndef RPC_OBSERVER_H__
#define RPC_OBSERVER_H__
#include <map>
#include <list>
#include <string>

using namespace std;

typedef list<void *>OBSERVER_LIST;
typedef list<void *>*OBSERVER_LIST_PTR;
typedef list<void *>::iterator OBSERVER_IT;
typedef map<string, OBSERVER_LIST_PTR>OBSERVER_MAP;

class ObserverHash
{
public:
    ObserverHash();
    ~ObserverHash();

public:
    void print(void);
    int size(void);
    int size(const string &key);
    void clear(void);
    bool empty(void);
    bool empty(const string &key);
    OBSERVER_LIST_PTR find(const string &key);
    void remove(const string &key);
    int insert(const string &key);
    void remove(const string &key, void *fdp);
    int insert(const string &key, void *fdp);
    void remove(void *fdp);

private:
    OBSERVER_MAP m_observer_map;
    OBSERVER_MAP::iterator m_it;
};

#endif // RPC_OBSERVER_H__

