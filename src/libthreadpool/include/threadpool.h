/* threadpool.h
 * DO NOT EDIT THIS FILE.
 * Date  : 2017-11-21
 * Author: Konishi
 * Email : konishi5202@163.com
 */
#ifndef THREADPOOL_H__
#define THREADPOOL_H__

//#define USING_THREAD_PRIORITY

enum ThreadPoolPriority{
    LowPriority = 1,
    HighPriority = 0,
};

class ThreadPool
{
public:
    ThreadPool();
    ~ThreadPool();

public:
    int create(int fix_thread_num, int dyn_thread_num, int max_queue_size);
    void destroy(void);
    int addWork(ThreadPoolPriority priority,void (*routine)(void *), void *arg, void (*release)(void *args));
    int getCurQueueSize(void);
    int getCurThreadSize(void);

private:
    int max_queue_size;
    int fix_thread_size;
    pthread_t *thread_id;
    pthread_t manager_id;
};

#endif 

