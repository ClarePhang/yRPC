/* threadpool.h
 * DO NOT EDIT THIS FILE.
 * Date  : 2018-01-16
 * Author: Konishi
 * Email : konishi5202@163.com
 */
#ifndef THREADPOOL_H__
#define THREADPOOL_H__

enum ThreadPoolPriority{
    LowPriority = 1,
    HighPriority = 0,
};

class ThreadPool
{
public:
    ThreadPool();
    virtual ~ThreadPool();

public:
    static ThreadPool *getInstance(void);
    virtual int create(int fix_thread_num, int dyn_thread_num, int max_queue_size) = 0;
    virtual void destroy(void) = 0;
    virtual int addWork(ThreadPoolPriority priority,void (*routine)(void *), void *arg, void (*release)(void *args)) = 0;
    virtual int getCurQueueSize(void) = 0;
    virtual int getCurThreadSize(void) = 0;

private:
    static ThreadPool *m_thread_pool;
};

#endif  //  THREADPOOL_H__

