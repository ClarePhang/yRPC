/* rpc_hash.cpp
 * DO NOT EDIT THIS FILE.
 * Date  : 2017-11-09
 * Author: zhangqiyin/Konishi
 * Email : zhangqiyin@hangsheng.com.cn
 */
#include <stdio.h>

#include "rpc_hash.h"

void RPCHash::print(void)
{
    printf("Hash Table:\n");
    for(it = rpc_map.begin(); it != rpc_map.end(); it++)
        printf("%s => %p\n", it->first.c_str(), it->second);
}

int RPCHash::size(void)
{
    return rpc_map.size();
}

void RPCHash::clear(void)
{
    rpc_map.clear();
}

bool RPCHash::empty(void)
{
    return rpc_map.empty();
}

void *RPCHash::find(string &key)
{
    it = rpc_map.find(key);
    return (it == rpc_map.end()) ? NULL : it->second;
}

int RPCHash::remove(string &key)
{
    it = rpc_map.find(key);
    if(it == rpc_map.end())
        return 0;
    rpc_map.erase(it);
    return 0;
}

int RPCHash::insert(string &key, void *value)
{
    it = rpc_map.find(key);
    if(it != rpc_map.end()) // exsit
        return 1;

    rpc_map[key] = value;
//    rpc_map.insert(std::pair<string, void *>(key, value));
    return 0;
}

int RPCHash::change(string &key, void *value)
{
    it = rpc_map.find(key);
    if(it == rpc_map.end()) // not exsit
        return -1;
    rpc_map[key] = value;
    return 0;
}

