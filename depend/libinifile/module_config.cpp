/* network_config.cpp
 * DO NOT EDIT THIS FILE.
 * Date  : 2017-11-28
 * Author: zhangqiyin/Konishi
 * Email : zhangqiyin@hangsheng.com.cn
 */
#include <stdio.h>
#include <errno.h>
#include <stdlib.h>

#include "module_config.h"

#define MC_DEBUG   printf
#define MC_INFO    printf
#define MC_WARN    printf
#define MC_ERROR   printf

ModuleConfig::ModuleConfig()
{
    path_init = false;
}

ModuleConfig::~ModuleConfig()
{
    path_init = false;
}

int ModuleConfig::setConfigProfile(const string &path)
{
    int ret = -1;
    
    if(path.empty())
    {
        MC_ERROR("ModuleConfig : config-file path can not be NULL!\n");
        return -1;
    }
    
    ret = m_inifile.load(path);
    if(ret != 0)
    {
        path_init = false;
        MC_ERROR("ModuleConfig : load %s config-file failed!\n", path.c_str());
        return -1;
    }
    
    path_init = true;
    
    return 0;
}

int ModuleConfig::referModule(const string &module, string &process)
{
    int ret = -1;
    
    if(!m_inifile.hasKey(MODULEBUILDSECTION, module))
    {
        MC_INFO("ModuleConfig : does't not have %s:%s config, please check!\n", process.c_str(), module.c_str());
        return -1;
    }

    ret = m_inifile.getValue(MODULEBUILDSECTION, module, process);
    
    return ret;
}

void ModuleConfig::printSection(void)
{
    IniFile::iterator it;

    MC_INFO("ModuleConfig : Section:\n");
    for(it = m_inifile.begin();it != m_inifile.end(); ++it)
        MC_INFO(" %s\n",it->first.c_str());
    MC_INFO("\n");
}

void ModuleConfig::printConfiguration(void)
{
    IniFile::iterator it;
    IniSection::iterator iti;
    
    MC_INFO("ModuleConfig : Configurations:\n");
    for(it = m_inifile.begin();it != m_inifile.end(); ++it)
    {
        MC_INFO(" %s\n",it->first.c_str());
        for(iti = it->second->items.begin();iti != it->second->items.end(); ++iti)
        {
            MC_INFO("  %s=%s\n", iti->key.c_str(), iti->value.c_str());
        }
    }
    MC_INFO("\n");
}

