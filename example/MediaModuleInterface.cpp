/* MediaModuleInterface.h
 * DO NOT EDIT THIS FILE.
 * Date  : 2017-11-22
 * Author: Konishi
 * Email : konishi5202@163.com
 */
#include <stdio.h>
#include "MediaModuleInterface.h"

ERPC *MediaModule::m_rpc = NULL;
MediaStateChanged MediaModule::m_observer_handler = NULL;

MediaModule::MediaModule()
{
    m_name.clear();
    m_name = string(MEDIAMODULENAME);
}

MediaModule::~MediaModule()
{
    m_name.clear();
}

void MediaModule::setRPC(ERPC *rpc)
{
    m_rpc = rpc;
}

int MediaModule::registerStateHandler(MediaStateChanged handler)
{
    int result = -1;

    result = m_rpc->registerObserver("MediaModule", "mediaState", mediaStateChanged);
    if(result)
        return result;

    m_observer_handler = handler;
    return 0;
}

int MediaModule::mediaControl(MediaControlEnum ctl, unsigned int time)
{
    int result = -1;
    MediaControlStr mc;
    size_t recv_len = 6;
    unsigned char send[6];
    unsigned char recv[6];

    mc.control_way = ctl;
    mc.control_para = time;
    SerialMediaControlStr((void *)send, &mc);
    result = m_rpc->proxyCall("MediaModule", string("mediaControl"), (void *)send, 5, (void *)recv, &recv_len);
    
    return result;
}

void MediaModule::mediaStateChanged(void *msg, void *data, size_t len)
{
    if(m_observer_handler)
        m_observer_handler(data, len);
}

