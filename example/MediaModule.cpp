/* MediaModule.cpp
 * DO NOT EDIT THIS FILE.
 * Date  : 2017-11-22
 * Author: zhangqiyin/Konishi
 * Email : zhangqiyin@hangsheng.com.cn
 */
#include <string>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <pthread.h>
#include <sys/time.h>


#include "MediaModule.h"

ERPC *MediaModule::m_rpc = NULL;

MediaModule::MediaModule()
{
    m_name.clear();
    m_name = string(MEDIAMODULENAME);
}

MediaModule::~MediaModule()
{
    m_name.clear();
}

void MediaModule::setRPC(ERPC *rpc)
{
    m_rpc = rpc;
}
static unsigned int count = 0;

void MediaModule::mediaPlay(void *arg)
{
    size_t data_len;
    void *data_ptr = NULL;
    char *response = (char *)"Media is playing.";

    ERPC::getUserData(arg, &data_ptr, &data_len);
    
    printf("\nReceive request : %s\n", (char *)data_ptr);
    printf("Media start play, count = %u.\n", count);
    
    m_rpc->setResponse(arg, response, strlen(response));
}

void MediaModule::mediaStop(void *arg)
{
    char *response = (char *)"Media is stoping.";
    
    //printf("Media stop play.\n");
    count++;
    m_rpc->setResponse(arg, response, strlen(response));
}

void MediaModule::mediaPrev(void *arg)
{
    char *response = (char *)"Switch previous OK.";
    
    printf("Switch previous media.\n");

    m_rpc->setResponse(arg, response, strlen(response));
}

void MediaModule::mediaNext(void *arg)
{
    char *response = (char *)"Switch next OK.";
    
    printf("Switch next media.\n");

    m_rpc->setResponse(arg, response, strlen(response));
}

int MediaModule::startMedisService(void)
{
    if(pthread_create(&thread_id, NULL, MediaBusiness, NULL) != 0)
        return -1;

    return 0;
}

void *MediaModule::MediaBusiness(void *arg)
{
    while(1)
    {
        sleep(5);
        printf("\nInvoke mediaSTATE\n");
        m_rpc->invokeObserver("mediaState", NULL, 0);
    }

    pthread_exit(NULL);
}

