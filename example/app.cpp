/* APP.cpp
 * DO NOT EDIT THIS FILE.
 * Date  : 2017-11-22
 * Author: zhangqiyin/Konishi
 * Email : zhangqiyin@hangsheng.com.cn
 */
#include <string>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <pthread.h>
#include <sys/time.h>
#include "app.h"

ERPC *APPView::m_rpc = NULL;

APPView::APPView()
{
    thread_id = 0;
    m_name.clear();
    m_name = string(APPNAME);
}

APPView::~APPView()
{
    thread_id = 0;
    m_name.clear();
}

int APPView::startBussiness(ERPC *rpc)
{
    m_rpc = rpc;
    if(pthread_create(&thread_id, NULL, appBusiness, NULL) != 0)
        return -1;

    return 0;
}

void APPView::mediaState(void *arg)
{
    printf("\nMedia status changed!\n");
   // return NULL;
}

void *APPView::appBusiness(void *arg)
{
    int result = -1;
    char recv[1024];
    float timeuse = 0.0;
    size_t recvlen = 1024;
    unsigned int count = 0;
    struct timeval start, end;
    char *send = (char *)"request hello world test!";

    sleep(2);
    
    result = m_rpc->registerObserver(string("MediaModule"), "mediaState", mediaState);
    printf("register Observer result = %d\n", result);
    
    result = m_rpc->proxyCall(string("MediaModule"), string("mediaPlay"), (void *)send, strlen(send)+1, (void *)recv, &recvlen);
    if(0 == result)
        ;// printf("Remote calling return:%s\n", recv);
    sleep(7);
    result = m_rpc->unregisterObserver(string("MediaModule"), "mediaState");
    
REPEAT:
    sleep(3);
    printf("\nCall Media service 10000 times:\n");
    gettimeofday(&start, NULL);

    while(true)
    {
        result = m_rpc->proxyCall(string("MediaModule"), string("mediaStop"), (void *)send, strlen(send)+1, (void *)recv, &recvlen);
        if(0 == result)
            ;//printf("Media service return :%s\n",recv);
        else
            printf("Remote calling failed!\n");
        count++;
        if(count == 10000)
        {
            count = 0;
            break;
        }
    }
    
    gettimeofday(&end, NULL);
    timeuse = (1000000*(end.tv_sec - start.tv_sec) + (float)(end.tv_usec - start.tv_usec))/1000;
    printf("--------- timeuse:%2.03f ms ---------\n",timeuse);
    
    m_rpc->proxyCall(string("MediaModule"), string("mediaPlay"), (void *)send, strlen(send)+1, (void *)recv, &recvlen);
    
    //printf("\n\n once again:\n");
    goto REPEAT;

    pthread_exit(NULL);
}

