/* MediaModuleImplement.cpp
 * DO NOT EDIT THIS FILE.
 * Date  : 2017-11-22
 * Author: Konishi
 * Email : konishi5202@163.com
 */
#include <string>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <pthread.h>
#include <sys/time.h>

#include "MediaModuleImplement.h"

ERPC *MediaModule::m_rpc = NULL;
unsigned int MediaModule::m_count = 0;

MediaModule::MediaModule()
{
    m_name.clear();
    m_name = string(MEDIAMODULENAME);
}

MediaModule::~MediaModule()
{
    m_name.clear();
}

void MediaModule::setRPC(ERPC *rpc)
{
    m_rpc = rpc;
}

int MediaModule::startMedisBusiness(void)
{
    if(pthread_create(&m_thread_id, NULL, MediaBusinessThread, NULL) != 0)
        return -1;

    return 0;
}

void MediaModule::mediaControl(void *arg)
{
    MediaControlStr mc;
    size_t data_len = 0;
    void *data_ptr = NULL;
    unsigned char response = 0;

    ERPC::getUserData(arg, &data_ptr, &data_len);
    DeserialMediaControlStr(data_ptr, &mc);

    switch(mc.control_way)
    {
        case stopMedia:
            printf("stop media.\n");
            break;

        case playMedia:
            printf("play media.\n");
            break;
            
        case pauseMedia:
            printf("pause media.\n");
            break;
            
        case prevMedia:
            printf("switch media to previous.\n");
            break;
            
        case nextMedia:
            printf("switch media to next.\n");
            break;
            
        case speedMedia:
            printf("speed media.\n");
            break;
            
        case backMedia:
            printf("back media.\n");
            break;
            
        case seekMedia:
            printf("Seek media to %u\n", mc.control_para);
            break;
            
        default:
            break;
    }

    m_rpc->setResponse(arg, (void *)&response, 1);
}

void *MediaModule::MediaBusinessThread(void *arg)
{
    while(1)
    {
        sleep(5);
        m_rpc->invokeObserver("mediaState", NULL, 0);
    }

    pthread_exit(NULL);
}

